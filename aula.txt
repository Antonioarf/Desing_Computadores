LDI R0 $0        ;    Carrega o acumulador com o valor 0
STA R0 @0        ;    Armazena o valor do acumulador em MEM[0] (constante 0)
STA R0 @2        ;    Armazena o valor do acumulador em MEM[2] (contador)
LDI R0 $1        ;    Carrega o acumulador com o valor 1
STA R0 @1        ;    Armazena o valor do acumulador em MEM[1] (constante 1)
LDI R0 $3        ;    Carrega o acumulador com o valor 3
STA R0 @289    ;

LOOP
NOP            ;
LDA R0 @352    ;        Carrega o acumulador com a leitura do botão KEY0
STA R0 @288    ;        Armazena o valor lido em HEX0 (para verificar erros de leitura)
CEQ R0 @0        ;    Compara com o valor de MEM[0] (constante 0)
JEQ LOOP        ;    Desvia se igual a 0 (botão não foi pressionado)
JSR Teste    ;    O botão foi pressionado, chama a sub-rotina de incremento
JMP @7        ;    Fecha o laço principal, faz uma nova leitura de KEY0

Teste       ;
NOP            ;
STA R0 @511
LDA R0 @2        ;    Carrega o valor de MEM[2] (contador)
SOMA R0 @1        ;    Incrementa o valor do contador
STA R0 @2        ;    Salva o incremento em MEM[2] (contador)
STA R0 @258    ;        Armazena o valor do bit0 do acumulador no LDR9
STA R0 @293    ;        Armazena o valor do acumulador no HEX5
RET            ;Retorna da sub-rotina